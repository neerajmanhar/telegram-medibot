from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from database.db import get_last_symptom
from core.session_storage import get_user_session, clear_user_session, append_to_memory, get_user_memory
from agents.doctor_gpt import ask_doctor_with_memory
from core.text_to_speech import generate_speech
import asyncio

# --- Start Command ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ЁЯСЛ Welcome to MediBot!  рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ MediBot рдореЗрдВ!\n\n"
        "ЁЯй║ I can give you some home remedies and medical advice according to your symptoms.\n"
        "ЁЯй║ рдореИрдВ рдЖрдкрдХреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреЛ рд╕рдордЭрдХрд░ рдШрд░реЗрд▓реВ рдЙрдкрд╛рдп рдФрд░ рджрд╡рд╛рдЗрдпреЛрдВ рдХреА рд╕рд▓рд╛рд╣ рджреЗрддреА рд╣реВрдБред\n\n"
        "ЁЯФШ Choose an action (рдХреЛрдИ рдПрдХ рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ):\n\n"
        "/proceed тАУ Get medical advice (рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд▓рд╛рд╣ рд▓реЗрдВ)\n"
        "/reset тАУ Clear previous inputs (рдкрд┐рдЫрд▓рд╛ рдЗрдирдкреБрдЯ рд╣рдЯрд╛рдПрдВ)\n"
        # "/history тАУ Show your last submitted symptom (рдЖрдЦрд┐рд░реА рд▓рдХреНрд╖рдг рджреЗрдЦреЗрдВ)\n"
        "/help тАУ Get help (рдорджрдж рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ)\n\n"
        "ЁЯОд YOU CAN NOW START TALKING TO ME IN VOICE OR TEXT, AND I WILL TRY TO HELP YOU.\n"
        "ЁЯОд рдЕрдм рдЖрдк рдореБрдЭрд╕реЗ рд╡реЙрдЗрд╕ рдпрд╛ рдЯреЗрдХреНрд╕реНрдЯ рдореЗрдВ рдмрд╛рдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдФрд░ рдореИрдВ рдЖрдкрдХреА рдорджрдж рдХрд░рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░реВрдВрдЧреАред",
        reply_markup=ReplyKeyboardMarkup(
            [['/proceed', '/reset'], ['/help']],
            resize_keyboard=True
        )
    )

# --- Help Command ---
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ЁЯй║ Please describe your symptoms in voice or text. I will try to help you.\n"
        "ЁЯй║ рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рд╡реЙрдЗрд╕ рдпрд╛ рдЯреЗрдХреНрд╕реНрдЯ рдореЗрдВ рдмрддрд╛рдПрдВред рдореИрдВ рдЖрдкрдХреА рдорджрдж рдХрд░реВрдВрдЧреАред"
    )

# --- History Command ---
async def history(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = str(update.effective_user.id)
    symptom = get_last_symptom(telegram_id)
    if symptom:
        await update.message.reply_text(f"ЁЯУМ Last symptom you shared: {symptom}")
    else:
        await update.message.reply_text("тЭЧ рдЕрднреА рддрдХ рдХреЛрдИ рд▓рдХреНрд╖рдг рдирд╣реАрдВ рдорд┐рд▓рд╛ рд╣реИред\nтЭЧ No symptom found yet.")

# --- Proceed Command ---
async def proceed(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    session = get_user_session(user_id)
    query = session.get("text")
    image_path = session.get("image_path")

    if not query:
        await update.message.reply_text(
            "тЭЧ You have not sent any information yet. Please describe your symptoms in voice or text and then tap on /proceed.\n"
            "тЭЧ рдЖрдкрдиреЗ рдЕрднреА рддрдХ рдХреЛрдИ рдЬрд╛рдирдХрд╛рд░реА рдирд╣реАрдВ рднреЗрдЬреА рд╣реИред рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рд╡реЙрдЗрд╕ рдпрд╛ рдЯреЗрдХреНрд╕реНрдЯ рдореЗрдВ рдмрддрд╛рдПрдВ рдФрд░ рдлрд┐рд░ /proceed рджрдмрд╛рдПрдВред"
        )
        return

    memory = get_user_memory(user_id)

    # Send animated loading message
    loading_msg = await update.message.reply_text("тП│ Processing.ЁЯТм")
    await asyncio.sleep(0.5)
    await loading_msg.edit_text("тП│ Processing..ЁЯй║")
    await asyncio.sleep(0.5)
    await loading_msg.edit_text("тП│ Processing...ЁЯдЦ")

    # Get LLM response
    if image_path:
        reply = ask_doctor_with_memory(query=query, image_path=image_path, memory=memory)
    else:
        reply = ask_doctor_with_memory(query=query, memory=memory)

    append_to_memory(user_id, query, reply)

    # Send reply text
    await loading_msg.edit_text(reply)

    # Notify about audio generation
    voice_loading_msg = await update.message.reply_text("ЁЯФИ Generating voice response, please wait...")

    # Generate speech in background thread
    audio_path = await asyncio.to_thread(generate_speech, reply)

    # Send voice message
    await update.message.reply_voice(voice=open(audio_path, "rb"))

    # Remove loading message for audio
    await voice_loading_msg.delete()

    # Clear session
    session.pop("text", None)
    session.pop("image_path", None)

    print("ЁЯЪА /proceed session debug:", session)


# --- Reset Command ---
async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    clear_user_session(user_id)
    await update.message.reply_text("ЁЯз╣ Memory has been cleared. You can start again.\nЁЯз╣ рдореЗрдореЛрд░реА рд╕рд╛рдлрд╝ рдХрд░ рджреА рдЧрдИ рд╣реИред рдЕрдм рдЖрдк рдлрд┐рд░ рд╕реЗ рд╢реБрд░реВ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред")
